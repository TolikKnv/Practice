# Функция для отображения виселицы в зависимости от текущего шага (количества ошибок)
def generate_gallows(step):
    if step == 6:  # Если допущено 6 ошибок — игрок проиграл
        print(
            """
              |_____
              |     |
              |     ☺
              |    /|\\
              |    / \\
            __|__
            """
        )
        print("Ты проиграл. Человечек повесился.")
    if step == 0:  # Начальное состояние — пустая виселица
        print(
            """
              |_____
              |     |
              |
              |
              |
            __|__
            """
        )
    if step == 1:  # Добавляем голову
        print(
            """
              |_____
              |     |
              |     ☺
              |
              |
            __|__
            """
        )
    if step == 2:  # Добавляем туловище
        print(
            """
              |_____
              |     |
              |     ☺
              |     |
              |
            __|__
            """
        )
    if step == 3:  # Добавляем одну руку
        print(
            """
              |_____
              |     |
              |     ☺
              |    /|
              |
            __|__
            """
        )
    if step == 4:  # Добавляем вторую руку
        print(
            """
              |_____
              |     |
              |     ☺
              |    /|\\
              |
            __|__
            """
        )
    if step == 5:  # Добавляем одну ногу
        print(
            """
              |_____
              |     |
              |     ☺
              |    /|\\
              |    /
            __|__
            """
        )


# Создаём список букв из введённого слова
word_list = []
word = input("Пусть кто то введёт слово: ")  # Игрок вводит загаданное слово
word_list.extend(word.upper())  # Преобразуем его в список заглавных букв

# Создаём маску слова, чтобы скрыть буквы (отображаются ▯)
global mask
mask = ["▯" for i in word_list]
print(f"Тебе загадали слово: ", end="")
print(*mask)
print()

# Список использованных букв
global use_letters
use_letters = []


# Функция, описывающая ход игры
def progress_of_the_game(step, word_list, use_letters):
    generate_gallows(step)  # Отображаем текущее состояние виселицы
    print('____________________________________________________________')
    letter = input("Выберите букву: ")  # Игрок вводит букву
    print()
    if letter.upper() in use_letters:  # Проверяем, использовалась ли эта буква раньше
        print("Ты уже использовал эту букву, попробуй снова.")
        print()
        print(*mask)
        print()
        return step  # Возвращаем текущий шаг без изменений
    else:
        use_letters += letter.upper()  # Добавляем букву в список использованных

    if letter.upper() in word_list:  # Если буква есть в слове
        print('Поздравляю, эта буква есть в слове.')
        print()
        for i in range(len(word_list)):  # Открываем все совпадающие буквы в маске
            if word_list[i] == letter.upper():
                mask[i] = letter.upper()
        print(*mask)
        print()
    else:  # Если буквы нет — увеличиваем количество ошибок
        print('Этой буквы нет в слове :(')
        print()
        print(*mask)
        print()
        step += 1  # Переходим к следующему шагу (виселица дорисовывается)
    return step  # Возвращаем обновлённое количество ошибок


# Основной цикл игры
step = 0  # Счётчик ошибок
while step < 6:  # Пока не допущено 6 ошибок
    step = progress_of_the_game(step, word_list, use_letters)  # Один ход игрока
generate_gallows(step)  # В конце показываем финальное состояние виселицы
